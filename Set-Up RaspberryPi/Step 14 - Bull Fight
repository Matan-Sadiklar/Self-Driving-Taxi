// Step 1
  cd ~/picar-x/example
  sudo python3 10.bull_fight.py

// Step 2
  After the code runs, the terminal will display the following prompt:

  No desktop !
* Serving Flask app "vilib.vilib" (lazy loading)
* Environment: production
WARNING: Do not use the development server in a production environment.
Use a production WSGI server instead.
* Debug mode: off
* Running on http://0.0.0.0:9000/ (Press CTRL+C to quit)

Then you can enter http://<your IP>:9000/mjpg in the browser to view the video screen
such as: https://192.168.18.113:9000/mjpg

// Code
  from picarx import Picarx
  from time import sleep
  from vilib import Vilib
  
  px = Picarx()
  
  def clamp_number(num,a,b):
  return max(min(num, max(a, b)), min(a, b))
  
  def main():
      Vilib.camera_start()
      Vilib.display()
      Vilib.color_detect("red")
      speed = 50
      dir_angle=0
      x_angle =0
      y_angle =0
      while True:
          if Vilib.detect_obj_parameter['color_n']!=0:
              coordinate_x = Vilib.detect_obj_parameter['color_x']
              coordinate_y = Vilib.detect_obj_parameter['color_y']
  
              # change the pan-tilt angle for track the object
              x_angle +=(coordinate_x*10/640)-5
              x_angle = clamp_number(x_angle,-35,35)
              px.set_cam_pan_angle(x_angle)
  
              y_angle -=(coordinate_y*10/480)-5
              y_angle = clamp_number(y_angle,-35,35)
              px.set_cam_tilt_angle(y_angle)
  
              # move
              # The movement direction will change slower than the pan/tilt direction
              # change to avoid confusion when the picture changes at high speed.
              if dir_angle > x_angle:
                  dir_angle -= 1
              elif dir_angle < x_angle:
                  dir_angle += 1
              px.set_dir_servo_angle(x_angle)
              px.forward(speed)
              sleep(0.05)
  
          else :
              px.forward(0)
              sleep(0.05)
  
  
  if __name__ == "__main__":
      try:
      main()
  
      finally:
          px.stop()
          print("stop and exit")
          sleep(0.1)
